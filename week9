---
title: "Week9 Assignment"
author: "Eunkyu Hahm"
date: "10/19/2019"
output:
  html_document:
    toc: yes
    toc_float: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Web APIs

The New York Times web site provides a rich set of APIs, as described here: http://developer.nytimes.com/docs 
Youâ€™ll need to start by signing up for an API key.
Your task is to choose one of the New York Times APIs, construct an interface in R to read in the JSON data, and transform it to an R dataframe.

# Load library


```{r}
library(jsonlite)
library(httr)
library(knitr)
library(dplyr)
```

# HTTR request

I will select articlesearch and quary with election. Use 'GET'function to send a request to website. I was needed to create an account in order to getting an API key. 
```{r}
nyt_elec<- GET('https://api.nytimes.com/svc/search/v2/articlesearch.json?q=election&api-key=2mLZpTsYEuzfKwJ6NOXZlZ4ZbYW73OgE')
nyt_elec
```
The request Status is 200, which means the connection is okay. 

# Loading JSON data

And I will transform JSON data into R data frame.
```{r}
nyt_elec<- rawToChar(nyt_elec$content)
nyt_elec <- fromJSON(nyt_elec, simplifyVector = TRUE)
data <- data.frame(nyt_elec)
```

```{r}
data <- select(data, "response.docs.web_url","response.docs.snippet","response.docs.lead_paragraph","response.docs.pub_date","response.docs.type_of_material")
data
```


# Collecting more data  

With using a For loop, I will collect more data. Since a single page has 10 observations and I try to loop 50 pages, total 500 articles are collected. Before I make a loop, I create an empty dataframe which has web url, snippet, lead paragraph, publish date, and type of materials. 
```{r}

data <- data.frame(web_url= character(),snippet= character(), lead_paragraph = character(),pub_date = character(),type_of_material = character())
```

```{r}
page <- 50
for (i in 1:page){
  url <- paste0("https://api.nytimes.com/svc/search/v2/articlesearch.json?q=election", "&page=", i, "&api-key=2mLZpTsYEuzfKwJ6NOXZlZ4ZbYW73OgE")
  nyt_election <- GET(url)
  nyt_election<- rawToChar(nyt_election$content)
  nyt_election <- fromJSON(nyt_election, simplifyVector = TRUE)
  d <- data.frame(nyt_election)
  web_url <- d$response.docs.web_url
  snippet <- d$response.docs.snippet
  lead_paragraph <- d$response.docs.lead_paragraph
  pub_date <- d$response.docs.pub_date
  type <- d$response.docs.document_type
  data <- rbind(data, as.data.frame(cbind(web_url,snippet,lead_paragraph,pub_date,type)))
}

```


# Result

This is the data that is transformed into data frame. 
```{r}
head(data) 
class(data)
```

